***************
*** 45,51 ****
  	const struct ipt_tcpmss_info *tcpmssinfo = targinfo;
  	struct tcphdr *tcph;
  	struct iphdr *iph;
! 	u_int16_t tcplen, newtotlen, oldval, newmss;
  	unsigned int i;
  	u_int8_t *opt;
  
--- 45,51 ----
  	const struct ipt_tcpmss_info *tcpmssinfo = targinfo;
  	struct tcphdr *tcph;
  	struct iphdr *iph;
! 	u_int16_t tcplen, newtotlen, oldval, newmss, mtu;
  	unsigned int i;
  	u_int8_t *opt;
  
***************
*** 54,60 ****
  	if (skb_cloned(*pskb) && !(*pskb)->sk) {
  		struct sk_buff *nskb = skb_copy(*pskb, GFP_ATOMIC);
  		if (!nskb)
! 			return NF_DROP;
  		kfree_skb(*pskb);
  		*pskb = nskb;
  	}
--- 54,60 ----
  	if (skb_cloned(*pskb) && !(*pskb)->sk) {
  		struct sk_buff *nskb = skb_copy(*pskb, GFP_ATOMIC);
  		if (!nskb)
! 			return IPT_CONTINUE;
  		kfree_skb(*pskb);
  		*pskb = nskb;
  	}
***************
*** 74,80 ****
  			printk(KERN_ERR
  			       "ipt_tcpmss_target: bad length (%d bytes)\n",
  			       (*pskb)->len);
! 		return NF_DROP;
  	}
  
  	if(tcpmssinfo->mss == IPT_TCPMSS_CLAMP_PMTU) {
--- 74,80 ----
  			printk(KERN_ERR
  			       "ipt_tcpmss_target: bad length (%d bytes)\n",
  			       (*pskb)->len);
! 		return IPT_CONTINUE;
  	}
  
  	if(tcpmssinfo->mss == IPT_TCPMSS_CLAMP_PMTU) {
***************
*** 82,98 ****
  			if (net_ratelimit())
  				printk(KERN_ERR
  			       		"ipt_tcpmss_target: no dst?! can't determine path-MTU\n");
! 			return NF_DROP; /* or IPT_CONTINUE ?? */
  		}
  
  		if((*pskb)->dst->pmtu <= (sizeof(struct iphdr) + sizeof(struct tcphdr))) {
  			if (net_ratelimit())
  				printk(KERN_ERR
  		       			"ipt_tcpmss_target: unknown or invalid path-MTU (%d)\n", (*pskb)->dst->pmtu);
! 			return NF_DROP; /* or IPT_CONTINUE ?? */
  		}
  
! 		newmss = (*pskb)->dst->pmtu - sizeof(struct iphdr) - sizeof(struct tcphdr);
  	} else
  		newmss = tcpmssinfo->mss;
  
--- 82,110 ----
  			if (net_ratelimit())
  				printk(KERN_ERR
  			       		"ipt_tcpmss_target: no dst?! can't determine path-MTU\n");
! 			return IPT_CONTINUE;
  		}
  
  		if((*pskb)->dst->pmtu <= (sizeof(struct iphdr) + sizeof(struct tcphdr))) {
  			if (net_ratelimit())
  				printk(KERN_ERR
  		       			"ipt_tcpmss_target: unknown or invalid path-MTU (%d)\n", (*pskb)->dst->pmtu);
! 			return IPT_CONTINUE;
  		}
+ 		mtu = (*pskb)->dst->pmtu;
  
! 		if (in) {
! 			if (in->mtu <= (sizeof(struct iphdr) + sizeof(struct tcphdr))) {
! 				if (net_ratelimit())
! 					printk(KERN_ERR
! 		       				"ipt_tcpmss_target: invalid interface MTU (%d)\n", in->mtu);
! 				return IPT_CONTINUE;
! 			}
! 			if (in->mtu < mtu)
! 				mtu = in->mtu;
! 		}
! 
! 		newmss = mtu - sizeof(struct iphdr) - sizeof(struct tcphdr);
  	} else
  		newmss = tcpmssinfo->mss;
  
***************
*** 140,146 ****
  			if (net_ratelimit())
  				printk(KERN_ERR "ipt_tcpmss_target:"
  				       " unable to allocate larger skb\n");
! 			return NF_DROP;
  		}
  
  		kfree_skb(*pskb);
--- 152,158 ----
  			if (net_ratelimit())
  				printk(KERN_ERR "ipt_tcpmss_target:"
  				       " unable to allocate larger skb\n");
! 			return IPT_CONTINUE;
  		}
  
  		kfree_skb(*pskb);
